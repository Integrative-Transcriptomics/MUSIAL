{
  "$schema": "MUSIAL_CONFIGURATION.schema.json",
  "title": "MUSIAL CONFIGURATION",
  "description": "JSON schema to validate and document MUSIAL module configuration.",
  "type": "array",
  "contains": [
    {
      "description": "JSON configuration for BUILD module",
      "type": "object",
      "properties": {
        "MODULE": {
          "description": "Configuration module identifier.",
          "type": "string",
          "pattern": "^BUILD$"
        },
        "minCoverage": {
          "description": "The minimal depth of coverage wrt. reads of a variant to be accepted. Extracted from the DP attribute of input .vcf files.",
          "type": "number",
          "minimum": 0.0
        },
        "minFrequency": {
          "description": "The minimal frequency wrt. reads supporting a homozygous allele call for a variant to be accepted. Extracted from the AF attribute of input .vcf files.",
          "type": "number",
          "minimum": 0.0,
          "maximum": 1.0
        },
        "minHetFrequency": {
          "description": "The minimal frequency wrt. reads supporting a heterozygous allele call for a variant to be accepted. Extracted from the AF attribute of input .vcf files.",
          "type": "number",
          "minimum": 0.0,
          "maximum": 1.0
        },
        "maxHetFrequency": {
          "description": "The maximal frequency wrt. reads supporting a heterozygous allele call for a variant to be accepted. Extracted from the AF attribute of input .vcf files.",
          "type": "number",
          "minimum": 0.0,
          "maximum": 1.0
        },
        "minQuality": {
          "description": "The minimal call quality for a variant to be accepted. Extracted from the QUALITY attribute of input .vcf files.",
          "type": "number",
          "minimum": 0.0
        },
        "threads": {
          "description": "The number of threads to use for threadable analysis.",
          "minimum": 1
        },
        "genomeAnalysis": {
          "description": "Whether to run full genome analysis, independent of specified features.",
          "type": "boolean"
        },
        "excludedPositions": {
          "description": "Positions that shall be excluded from the analysis.",
          "type": "object",
          "patternProperties": {
            "^.+$": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        },
        "referenceFASTA": {
          "description": "Path to a .fasta file; Content will be used as reference genome.",
          "type": "string",
          "pattern": "^.+.fasta$"
        },
        "referenceGFF": {
          "description": "Path to a .gff or .gff3 file; Content will be used as reference genome feature annotation.",
          "type": "string",
          "pattern": "^.+.gff|.+.gff3$"
        },
        "outputFile": {
          "description": "Path pointing to a file; Content will be used as output file path.",
          "type": "string",
          "pattern": "^.+.json$"
        },
        "samples": {
          "description": "Object specifying the set of samples to analyze.",
          "type": "object",
          "patternProperties": {
            "^.+$": {
              "description": "Object representing one single sample to analyze. The property key will be used as the internal sample name.",
              "type": "object",
              "properties": {
                "vcfFile": {
                  "description": ".vcf file matching the format described in http://samtools.github.io/hts-specs/VCFv4.3.pdf.",
                  "type": "string",
                  "pattern": "^.+.vcf$"
                },
                "annotations": {
                  "patternProperties": {
                    "^.^$": {
                      "description": "Any string key/value pairs that will be included as meta-information for the sample in the output file.",
                      "type": "string",
                      "pattern": "^.+$"
                    }
                  }
                }
              }
            }
          }
        },
        "features": {
          "description": "Object specifying the set of features to match from the provided `referenceGFF` that shall be analyzed.",
          "type": "object",
          "patternProperties": {
            "^.+$": {
              "description": "Object representing one feature to analyze. The property key will be used as the internal feature name.",
              "type": "object",
              "properties": {
                "pdbFile": {
                  "description": "Path pointing to a .pdb format (https://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html) file. If specified the structure contained within the file will be used as protein product of this feature and triggers proteoform analysis.",
                  "type": "string",
                  "pattern": "^.+.pdb$"
                },
                "isCodingSequence": {
                  "description": "Whether to consider this feature as coding sequence. This will trigger proteoform analysis, even without a specified `pdbFile`.",
                  "type": "boolean"
                },
                "annotations": {
                  "patternProperties": {
                    "^.^$": {
                      "description": "Any string key/value pairs that will be included as meta-information for the feature in the output file.",
                      "type": "string",
                      "pattern": "^.+$"
                    }
                  }
                }
              },
              "patternProperties": {
                "^MATCH_.^$": {
                  "description": "String key (key has to be MATCH_X, with X being the attribute name in the .gff file)/value pairs that will be used to match feature information from specified .gff.",
                  "type": "string",
                  "pattern": "^.+$"
                }
              },
              "minProperties": 1
            }
          }
        }
      }
    },
    {
      "description": "JSON configuration for EXTRACT module",
      "type": "object",
      "properties": {
        "MODULE": {
          "description": "Configuration module identifier.",
          "type": "string",
          "pattern": "^EXTRACT$"
        },
        "contentMode": {
          "description": "The content mode, i.e., whether to extract nucleotide or aminoacid information.",
          "type": "string",
          "pattern": "^NUCLEOTIDE|AMINOACID$"
        },
        "outputMode": {
          "description": "The output mode, i.e., table in .tsv or (aligned) sequence in .fasta format.",
          "type": "string",
          "pattern": "^TABLE|SEQUENCE|SEQUENCE_ALIGNED$"
        },
        "excludeIndels": {
          "description": "Whether to exclude indels from the output.",
          "type": "boolean"
        },
        "excludeConservedPositions": {
          "description": "Whether to exclude conserved positions from the output.",
          "type": "boolean"
        },
        "filterVariantsBy": {
          "description": "Specification of variant annotation key/values to filter variants for the extraction. Each object key has to map a valid variant annotation key to an array of string values. Only variants with a annotation value stored under the respective key inside the array are extracted. E.g. 'SNPEFF_Effect': ['missense_variant'].",
          "type": "object",
          "additionalProperties": {
            "description": "Any valid variant annotation key mapping to a list of allowed values for variants to be extracted.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "grouped": {
          "description": "Whether to group samples into alleles/proteoforms.",
          "type": "boolean"
        },
        "samples": {
          "description": "Samples to exclude from the extract process.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "features": {
          "description": "Features to exclude from the extract process.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputFile": {
          "description": "Path pointing to a file; Content is expected to be output of BUILD module, i.e., a .json file.",
          "type": "string",
          "pattern": "^.+.json$"
        },
        "outputDirectory": {
          "description": "Path pointing to a directory; Generated content will be stored at.",
          "type": "string"
        }
      }
    }
  ]
}
